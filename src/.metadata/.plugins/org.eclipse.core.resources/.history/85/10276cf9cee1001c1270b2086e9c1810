package tp03.ejercicio1;

import tp02.ejercicio2.ListaEnlazadaGenerica;
import tp02.ejercicio2.ListaGenerica;

public class ejer3 {
	
		private ArbolBinario<Integer> dato;


		public ContadorArbol (ArbolBinario<Integer> dato) {
			this.dato = dato;
		}
	
	public ListaGenerica<Integer> ContadorArbol(ArbolBinario<Integer> arbol){
		ListaGenerica<Integer> lista = new ListaEnlazadaGenerica<Integer>();
		InOrden(lista,arbol);
		PostOrden(lista,arbol);
		return lista;
	}
	
	
	private int InOrden (ListaGenerica<Integer> lista,ArbolBinario<Integer> a){
		int cant = 0;
		if (a.tieneHijoIzquierdo()) {
			InOrden(lista,a.getHijoIzquierdo());
		}
		if (a.getDato() % 2 == 0) {
			lista.agregarFinal(a.getDato());
		}
		if (a.tieneHijoDerecho()) {
			InOrden(lista,a.getHijoDerecho());
		}
		return cant;
	}
	
	private int PostOrden (ListaGenerica<Integer> lista,ArbolBinario<Integer> a){
		int cant = 0;
		
		if (a.tieneHijoIzquierdo()) {
			PostOrden(lista,a.getHijoIzquierdo());
		}
		if (a.tieneHijoDerecho()) {
			PostOrden(lista,a.getHijoDerecho());
		}
		if (a.getDato() % 2 == 0) {
			lista.agregarFinal(a.getDato());
		}
		return cant;
	
	
	}
	
	
	public static void main(String[] args) {
		ArbolBinario<Integer> a = new ArbolBinario<Integer>(2); 
		ArbolBinario<Integer> b = new ArbolBinario<Integer>(4); 
		ArbolBinario<Integer> c = new ArbolBinario<Integer>(6); 
		ArbolBinario<Integer> d = new ArbolBinario<Integer>(8); 
		ArbolBinario<Integer> e = new ArbolBinario<Integer>(10);
		
		a.agregarHijoIzquierdo(b);
		a.agregarHijoDerecho(c);
		b.agregarHijoIzquierdo(d);
		b.agregarHijoDerecho(e);
		
		ContadorArbol test = new ContadorArbol(a);
		
		ListaGenerica<Integer> l = test.numerosPares();
		
		System.out.println(l.toString());

	}